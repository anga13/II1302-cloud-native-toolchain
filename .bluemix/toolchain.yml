version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](ii1302_toolchain.svg?localize)'
  icon: icon.svg
  required:
    - sample-build
    - sample-repo
  info:
    # compute the git url and branch values dynamically so that they remain correct when repo is forked etc. 
    # note: `repository` url param must always be provided while the `branch` url param is optional
    # the computed urls are of the same format as the original static urls shown above
    git url: >
        '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
        $env.branch ?
          '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
          '[master]('+ $env.repository + '/tree/master)'
toolchain:
  name: 'ii1302-cloud-native-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  sample-repo:
    service_id: githubconsolidated
    parameters:
      repo_name: 'sample-{{toolchain.name}}'
      repo_url: 'https://github.com/anga13/cloudyappy'
      type: clone
      has_issues: true
      enable_traceability: false
  sample-build:
    service_id: pipeline
    parameters:
      services:
        - sample-repo
      name: 'sample-{{toolchain.name}}'
      ui-pipeline: true
      configuration:
        content:
          $ref: pipeline.yml
          $refType: text
        env:
          SAMPLE_REPO: sample-repo
          CF_APP_NAME: '{{form.pipeline.parameters.app-name}}'
          TEST_SPACE: '{{form.pipeline.parameters.test-space}}'
          TEST_ORGANIZATION: '{{form.pipeline.parameters.test-organization}}'
          TEST_REGION_ID: '{{form.pipeline.parameters.test-region}}'
          PROD_SPACE: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORGANIZATION: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
        execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      app-name: '{{services.sample-repo.parameters.repo_name}}'
    schema:
      $ref: deploy.json
